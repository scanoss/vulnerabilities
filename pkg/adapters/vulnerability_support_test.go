package adapters

import (
	"fmt"
	pb "github.com/scanoss/papi/api/vulnerabilitiesv2"
	"scanoss.com/vulnerabilities/pkg/dtos"
	zlog "scanoss.com/vulnerabilities/pkg/logger"

	"testing"
)

func TestVulnOutputConvert(t *testing.T) {
	err := zlog.NewSugaredDevLogger()
	if err != nil {
		t.Fatalf("an error '%s' was not expected when opening a sugared logger", err)
	}
	defer zlog.SyncZap()

	var outputDto = dtos.VulnerabilityOutput{}

	output, err := convertVulnerabilityOutput(outputDto)
	if err != nil {
		t.Errorf("TestOutputConvert failed: %v", err)
	}
	fmt.Printf("Output: %v\n", output)
}

func TestCpeOutputConvert(t *testing.T) {
	err := zlog.NewSugaredDevLogger()
	if err != nil {
		t.Fatalf("an error '%s' was not expected when opening a sugared logger", err)
	}
	defer zlog.SyncZap()

	var outputDto = dtos.CpeOutput{}
	output, err := convertCPEOutput(outputDto)
	if err != nil {
		t.Errorf("TestCpeOutputConvert failed: %v", err)
	}
	fmt.Printf("Output: %v\n", output)
}

func TestVulnInputConvert(t *testing.T) {
	err := zlog.NewSugaredDevLogger()
	if err != nil {
		t.Fatalf("an error '%s' was not expected when opening a sugared logger", err)
	}
	defer zlog.SyncZap()

	var vulnIn = &pb.VulnerabilityRequest{}
	input, err := convertVulnerabilityInput(vulnIn)
	if err != nil {
		t.Errorf("TestInputConvert failed: %v", err)
	}
	fmt.Printf("Input: %v\n", input)
}
