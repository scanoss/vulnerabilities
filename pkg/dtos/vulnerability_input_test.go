// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Copyright (C) 2018-2025 SCANOSS.COM
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package dtos

import (
	"fmt"
	"testing"

	zlog "github.com/scanoss/zap-logging-helper/pkg/logger"
)

func TestParseVulnerabilityInput(t *testing.T) {
	var inputJSON = `{
  	"purls": [
	    {
	      "purl": "pkg:github/selinuxproject/selinux@0.2.3"
	    },{
	      "purl": "pkg:github/qos-ch/slf4j"
	    }, {
	      "purl": "pkg:github/eprosima/fast-dds",
	      "requirement": ">=1.0.0"
	    }
  	]
	}`

	err := zlog.NewSugaredDevLogger()
	if err != nil {
		t.Fatalf("an error '%s' was not expected when opening a sugared logger", err)
	}
	defer zlog.SyncZap()
	data, err := ParseVulnerabilityInput([]byte(inputJSON))
	if err != nil {
		t.Errorf("dtos.ParseVulnerabilityInput() error = %v", err)
	}
	fmt.Println("Parsed input data: ", data)

	_, err = ParseVulnerabilityInput(nil)
	if err == nil {
		t.Errorf("dtos.ParseVulnerabilitiesInput() did not fail")
	}
	fmt.Println("get expected error: ", err)

	var brokenJSON = `{
  "purlsaa": [
    {
      "purlaa",: "pkg:github/selinuxproject/selinux@0.2.3",
    },{
      "purl;": "pkg:github/qos-ch/slf4j",
    }, {
      "purl": "pkg:github/eprosima/fast-dds"
    }
  ]
}
`
	_, err = ParseVulnerabilityInput([]byte(brokenJSON))
	if err == nil {
		t.Errorf("dtos.ParseVulnerabilityInput() did not fail")
	}
	fmt.Println("get expected error: ", err)
}
